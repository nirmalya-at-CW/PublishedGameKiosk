/*
 * This file is generated by jOOQ.
*/
package com.OneHuddle.DBUTF8.jOOQ.generated.tables.records


import com.OneHuddle.DBUTF8.jOOQ.generated.tables.Pet

import java.lang.Integer
import java.lang.Short
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.0"
  ),
  comments = "This class is generated by jOOQ"
)
class PetRecord extends UpdatableRecordImpl[PetRecord](Pet.PET) with Record9[Short, String, String, String, String, String, Timestamp, String, Integer] {

  /**
   * Setter for <code>OneHuddle.pet.justID</code>.
   */
  def setJustid(value : Short) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.justID</code>.
   */
  def getJustid : Short = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Short]
  }

  /**
   * Setter for <code>OneHuddle.pet.nameUniversal</code>.
   */
  def setNameuniversal(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.nameUniversal</code>.
   */
  def getNameuniversal : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>OneHuddle.pet.nameEnglish</code>.
   */
  def setNameenglish(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.nameEnglish</code>.
   */
  def getNameenglish : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>OneHuddle.pet.langUsed</code>.
   */
  def setLangused(value : String) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.langUsed</code>.
   */
  def getLangused : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>OneHuddle.pet.owner</code>.
   */
  def setOwner(value : String) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.owner</code>.
   */
  def getOwner : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>OneHuddle.pet.sex</code>.
   */
  def setSex(value : String) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.sex</code>.
   */
  def getSex : String = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>OneHuddle.pet.birth</code>.
   */
  def setBirth(value : Timestamp) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.birth</code>.
   */
  def getBirth : Timestamp = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  /**
   * Setter for <code>OneHuddle.pet.timezoneApplicable</code>.
   */
  def setTimezoneapplicable(value : String) : Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.timezoneApplicable</code>.
   */
  def getTimezoneapplicable : String = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>OneHuddle.pet.age</code>.
   */
  def setAge(value : Integer) : Unit = {
    set(8, value)
  }

  /**
   * Getter for <code>OneHuddle.pet.age</code>.
   */
  def getAge : Integer = {
    val r = get(8)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Short] = {
    return super.key.asInstanceOf[ Record1[Short] ]
  }

  // -------------------------------------------------------------------------
  // Record9 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row9[Short, String, String, String, String, String, Timestamp, String, Integer] = {
    super.fieldsRow.asInstanceOf[ Row9[Short, String, String, String, String, String, Timestamp, String, Integer] ]
  }

  override def valuesRow : Row9[Short, String, String, String, String, String, Timestamp, String, Integer] = {
    super.valuesRow.asInstanceOf[ Row9[Short, String, String, String, String, String, Timestamp, String, Integer] ]
  }
  override def field1 : Field[Short] = Pet.PET.JUSTID
  override def field2 : Field[String] = Pet.PET.NAMEUNIVERSAL
  override def field3 : Field[String] = Pet.PET.NAMEENGLISH
  override def field4 : Field[String] = Pet.PET.LANGUSED
  override def field5 : Field[String] = Pet.PET.OWNER
  override def field6 : Field[String] = Pet.PET.SEX
  override def field7 : Field[Timestamp] = Pet.PET.BIRTH
  override def field8 : Field[String] = Pet.PET.TIMEZONEAPPLICABLE
  override def field9 : Field[Integer] = Pet.PET.AGE
  override def component1 : Short = getJustid
  override def component2 : String = getNameuniversal
  override def component3 : String = getNameenglish
  override def component4 : String = getLangused
  override def component5 : String = getOwner
  override def component6 : String = getSex
  override def component7 : Timestamp = getBirth
  override def component8 : String = getTimezoneapplicable
  override def component9 : Integer = getAge
  override def value1 : Short = getJustid
  override def value2 : String = getNameuniversal
  override def value3 : String = getNameenglish
  override def value4 : String = getLangused
  override def value5 : String = getOwner
  override def value6 : String = getSex
  override def value7 : Timestamp = getBirth
  override def value8 : String = getTimezoneapplicable
  override def value9 : Integer = getAge

  override def value1(value : Short) : PetRecord = {
    setJustid(value)
    this
  }

  override def value2(value : String) : PetRecord = {
    setNameuniversal(value)
    this
  }

  override def value3(value : String) : PetRecord = {
    setNameenglish(value)
    this
  }

  override def value4(value : String) : PetRecord = {
    setLangused(value)
    this
  }

  override def value5(value : String) : PetRecord = {
    setOwner(value)
    this
  }

  override def value6(value : String) : PetRecord = {
    setSex(value)
    this
  }

  override def value7(value : Timestamp) : PetRecord = {
    setBirth(value)
    this
  }

  override def value8(value : String) : PetRecord = {
    setTimezoneapplicable(value)
    this
  }

  override def value9(value : Integer) : PetRecord = {
    setAge(value)
    this
  }

  override def values(value1 : Short, value2 : String, value3 : String, value4 : String, value5 : String, value6 : String, value7 : Timestamp, value8 : String, value9 : Integer) : PetRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this
  }

  /**
   * Create a detached, initialised PetRecord
   */
  def this(justid : Short, nameuniversal : String, nameenglish : String, langused : String, owner : String, sex : String, birth : Timestamp, timezoneapplicable : String, age : Integer) = {
    this()

    set(0, justid)
    set(1, nameuniversal)
    set(2, nameenglish)
    set(3, langused)
    set(4, owner)
    set(5, sex)
    set(6, birth)
    set(7, timezoneapplicable)
    set(8, age)
  }
}
